#!/usr/bin/env bash

APP="app_name" # name of your release

BUILD_HOST="188.xxx.xxx.xxx" # host where to build the release
BUILD_USER="root" # local user at build host
BUILD_AT="/tmp/edeliver/app_name/builds" # build directory on build host

PRODUCTION_HOSTS="188.xxx.xxx.xx" # deploy / production hosts separated by space
PRODUCTION_USER="root" # local user at deploy hosts
DELIVER_TO="/home/web" # deploy directory on production hosts

TARGET_MIX_ENV="prod"

pre_erlang_get_and_update_deps() {

  status "Adding Erlang Solutions repo"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb $SILENCE
    sudo dpkg -i erlang-solutions_1.0_all.deb $SILENCE
  "

  status "Updating apt-get"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    sudo apt-get update $SILENCE
  "

  status "Installing git"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    sudo apt-get install git $SILENCE
  "

  status "Installing node and npm"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    sudo apt-get -y install nodejs-legacy $SILENCE
    sudo apt-get -y install npm $SILENCE
  "

  status "Installing the Erlang/OTP platform and all of its applications"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    sudo apt-get -y install esl-erlang $SILENCE
  "

  status "Installing Elixir"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    sudo apt-get install elixir
  "
}

pre_erlang_clean_compile() {
  status "Installing NPM dependencies"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT/assets'
    npm install
  "

  status "Building static files"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    mkdir -p priv/static

    cd '$BUILD_AT/assets'
    npm run deploy
  "

  status "Running phoenix.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
  "
}
